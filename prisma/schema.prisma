// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int      @id @default(autoincrement())
  name     String
  contact  String
  email    String   @unique
  password String
}

model Approver {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
}

model Pengawas {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  contact  String
  email    String   @unique
  status   String
  makams   makam[]
  statuses makamStatus[]
}


model makam {
  id                      Int      @id @default(autoincrement())
  blok                    String
  nama                    String
  lokasi                  String
  silsilah                String
  ext                     String?
  masa_aktif              DateTime
  nama_penanggung_jawab   String
  kontak_penanggung_jawab String
  description             String
  payment                 String
  approved                String
  created_at              DateTime @default(now())
  updated_at              DateTime @updatedAt

  userId Int?
  user   User? @relation(fields: [userId], references: [id])
}

model makamStatus {
  id                      Int      @id @default(autoincrement())
  blok                    String
  nama                    String
  lokasi                  String
  silsilah                String
  ext                     String?
  masa_aktif              DateTime
  nama_penanggung_jawab   String
  kontak_penanggung_jawab String
  description             String
  payment                 String
  approved                String
  created_at              DateTime @default(now())
  updated_at              DateTime @updatedAt

  userId Int?
  user   User? @relation(fields: [userId], references: [id])
}

